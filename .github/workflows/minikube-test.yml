# This is a basic workflow to help you get started with Actions

name: minikube-test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup minikube
        uses: manusa/actions-setup-minikube@v2.4.3
        with:
          minikube version: 'v1.24.0'
          kubernetes version: 'v1.23.0'
          # Need two nodes, so that the checker can be deployed on one node, and the scout on the other.
          start args: "--nodes=3"
          driver: docker
      - name: Build image into minikube cluster
        run: |
          export SHELL=/bin/bash
          eval $(minikube -p minikube docker-env)
          make image
          echo -n "verifying images:"
          docker images
      # TODO: Come up with a better way to do this
      - name: Sleep 5
        run: |
          sleep 5
          kubectl get nodes
      - name: Deploy sg_chek
        run: |
          kubectl apply -f manifests/rbac.yaml
          sleep 5
          kubectl apply -f manifests/checker.yaml
      - name: Sleep 60
        run: |
          sleep 60
      - name: Show logs
        run: |
          for pod in $(kubectl get pods -o json | jq -r .items[].metadata.name); do kubectl logs pod/$pod; done
        
